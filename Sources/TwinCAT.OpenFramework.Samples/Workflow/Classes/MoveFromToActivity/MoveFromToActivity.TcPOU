<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MoveFromToActivity" Id="{3e439478-2975-438e-b7bb-9ad4531af15c}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

{attribute 'no_explicit_call' := 'do not call this function block directly'} 
{attribute 'enable_dynamic_creation'}	
FUNCTION_BLOCK MoveFromToActivity EXTENDS TOF_Workflow.Activity IMPLEMENTS IMoveFromToActivityActivity
VAR
	_ClassName : STRING := __POUNAME();
	
	_ToXPosition : LREAL;
	_ToYPosition : LREAL;
	
	_PositionChangeTimer : Timer;
END_VAR
VAR CONSTANT
	POSITION_CHANGE_TIMER_INTERVAL : TIME := T#10MS;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Overriden" Id="{7a5c0015-afeb-4143-89bb-9a37f6d5f65c}" />
    <Property Name="ClassName" Id="{a66a843c-b1e9-49fb-b1bd-eb30c1a59478}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{684d0e63-ba64-4197-8549-110764775012}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Configure" Id="{eac7bd11-88b0-437c-b3da-fdca548034fb}">
      <Declaration><![CDATA[METHOD Configure
VAR_INPUT
	toXPosition : LREAL;
	toYPosition : LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_ToXPosition := toXPosition;
_ToYPosition := toYPosition;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnAborting" Id="{8dfd965b-f12b-4af4-a2a8-2c7332272415}" FolderPath="Overriden\">
      <Declaration><![CDATA[METHOD PROTECTED OnAborting 
VAR_INPUT
	start : BOOL;
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[done := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnRunning" Id="{531b20aa-04ec-447d-8df6-e631e6e7a6ba}" FolderPath="Overriden\">
      <Declaration><![CDATA[METHOD PROTECTED OnRunning 
VAR_INPUT
	start : BOOL;
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR
VAR
	xPosition : TOF_Core.GENERIC_VALUE;
	yPosition : TOF_Core.GENERIC_VALUE;

	currentXPosition : INT;
	currentYPosition : INT;
	
	variableNotFoundException : TOF_Core.StandardException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF start THEN
	_PositionChangeTimer.Interval := POSITION_CHANGE_TIMER_INTERVAL;
	_PositionChangeTimer.Start();
ELSE
	_PositionChangeTimer.Execute();

	IF _PositionChangeTimer.Done THEN
		IF NOT TryGetVariable('XPosition', variable => xPosition) THEN
			variableNotFoundException.Throw(CurrentNamespace.Name, Classname, __POUNAME(), __POSITION(), "Variable 'XPosition' was not found");
		END_IF
		
		IF NOT TryGetVariable('YPosition', variable => yPosition) THEN
			variableNotFoundException.Throw(CurrentNamespace.Name, Classname, __POUNAME(), __POSITION(), "Variable 'YPosition' was not found");			
		END_IF
		
		currentXPosition := xPosition.AsInt();
		currentYPosition := yPosition.AsInt();
		
		IF currentXPosition <> _ToXPosition THEN
			IF currentXPosition < _ToXPosition THEN
				currentXPosition := currentXPosition + 1;
			ELSE
				currentXPosition := currentXPosition - 1;
			END_IF
			
			xPosition.ChangeValueByAny(currentXPosition);
		END_IF
		
		IF currentYPosition <> _ToYPosition THEN
			IF currentYPosition < _ToYPosition THEN
				currentYPosition := currentYPosition + 1;
			ELSE
				currentYPosition := currentYPosition - 1;
			END_IF
			
			yPosition.ChangeValueByAny(currentYPosition);
		END_IF
		
		IF currentXPosition <> _ToXPosition OR_ELSE currentYPosition <> _ToYPosition THEN
			_PositionChangeTimer.Start();
		ELSE		
			done := TRUE;
		END_IF
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{26396f5b-789d-4f77-902f-bac2f3ab39b8}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{170a8207-e92a-43d3-98ef-dc6222e69a3d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ToXPosition" Id="{f565365f-3d75-4cc9-9b98-f46d263c2bfe}">
      <Declaration><![CDATA[PROPERTY ToXPosition : LREAL]]></Declaration>
      <Get Name="Get" Id="{766972fc-3f3f-46e2-bcb0-ef52cecd7f9d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ToXPosition := _ToXPosition;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ToYPosition" Id="{d3b1e4d2-5064-4089-b170-51f50dc5d7d2}">
      <Declaration><![CDATA[PROPERTY ToYPosition : LREAL]]></Declaration>
      <Get Name="Get" Id="{02f2f180-5bb0-494f-90ce-5e2005e46225}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ToYPosition := _ToYPosition;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>