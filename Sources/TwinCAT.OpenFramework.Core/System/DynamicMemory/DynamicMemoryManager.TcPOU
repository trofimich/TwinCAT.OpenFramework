<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="DynamicMemoryManager" Id="{dfd03ea7-11b7-42ce-b52e-f5a7df7a7ad3}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM DynamicMemoryManager
VAR
	_ClassName : STRING := __POUNAME();
	
	_AutoDisposedObjects : POINTER TO IObject;	
	_AutoDisposedObjectCount : DWORD;	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Service memebers" Id="{ead780a2-bf4c-47dc-a6d8-bac15c5bc6e0}" />
    <Property Name="ClassName" Id="{c33db740-6bfc-43f8-9d4d-602279175d35}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{fc745387-f67a-4d86-bdee-e470addbc3c6}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="DisposeAutoDisposedObjects" Id="{a080fe6a-f539-4ac0-9048-10f8d3587c3b}">
      <Declaration><![CDATA[METHOD DisposeAutoDisposedObjects
VAR
	i : ULINT;
	objectToDispose : IObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _AutoDisposedObjectCount > 0 THEN
	FOR i := 0 TO _AutoDisposedObjectCount - 1 DO
		objectToDispose := _AutoDisposedObjects[i];
		objectToDispose.Dispose();
	END_FOR
	
	__DELETE(_AutoDisposedObjects);
	
	_AutoDisposedObjectCount := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsDynamicData" Id="{4c5114c7-cc73-448a-9f8f-fa67bfde37e3}">
      <Declaration><![CDATA[METHOD IsDynamicData : BOOL
VAR_INPUT
	dataAddress : PVOID;
	dataSize : UDINT := 1;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsDynamicData := Tc2_System.F_CheckMemoryArea(dataAddress, dataSize) = E_TcMemoryArea.Dynamic;]]></ST>
      </Implementation>
    </Method>
    <Method Name="RegisterAutoDisposedObject" Id="{74218506-44e1-4d86-8e89-41e66c133362}" FolderPath="Service memebers\">
      <Declaration><![CDATA[METHOD INTERNAL RegisterAutoDisposedObject
VAR_IN_OUT CONSTANT
	autoDisposedObject : AutoDisposedObject;
END_VAR
VAR
	newAutoDisposedObjects : POINTER TO IObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT __ISVALIDREF(autoDisposedObject) OR_ELSE NOT IsDynamicData(autoDisposedObject.Address) THEN
	RETURN;
END_IF

newAutoDisposedObjects := __NEW(POINTER TO IObject, (_AutoDisposedObjectCount + 1));

IF _AutoDisposedObjectCount > 0 THEN
	Tc2_System.MEMCPY(newAutoDisposedObjects, _AutoDisposedObjects, TO_UDINT(XSIZEOF(POINTER TO IObject) * _AutoDisposedObjectCount));
	
	__DELETE(_AutoDisposedObjects);
END_IF

newAutoDisposedObjects[_AutoDisposedObjectCount] := autoDisposedObject;

_AutoDisposedObjects := newAutoDisposedObjects;
_AutoDisposedObjectCount := _AutoDisposedObjectCount + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReleaseDynamicMemory" Id="{5fe5bc2a-b608-418e-9ff0-e9c1a91c92f5}">
      <Declaration><![CDATA[METHOD ReleaseDynamicMemory
VAR_INPUT
	value : POINTER TO BYTE;
	isObject : BOOL;
END_VAR
VAR
	objectPointer : POINTER TO Object;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF value = 0 OR_ELSE NOT IsDynamicData(value, 1) THEN
	RETURN;
END_IF

IF isObject THEN
	objectPointer := value;
	// to call FB_exit
	objectPointer^.Dispose();
ELSE
	__DELETE(value);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>