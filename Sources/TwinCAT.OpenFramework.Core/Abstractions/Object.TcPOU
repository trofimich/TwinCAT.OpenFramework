<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Object" Id="{65208310-8b3f-466c-81b7-6cce45022676}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

{attribute 'no_explicit_call' := 'Direct call is not allowed'} 
FUNCTION_BLOCK ABSTRACT Object IMPLEMENTS IObject]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="Address" Id="{fb693a32-9773-4047-aa8f-22abdeeaa290}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY FINAL Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{9f8bbfa3-aa5e-447f-898b-426110e9c9ed}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := THIS;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ClassName" Id="{93bace28-41b5-44d6-b854-9ee3edbd382f}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ABSTRACT ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{64b538df-f61f-4f5f-95f8-f82623c92e0a}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Equals" Id="{c147fb9a-ab41-452b-8012-567d8446205b}">
      <Declaration><![CDATA[{attribute "object_name" := "Equals"}
METHOD Equals : BOOL
VAR_INPUT 
	object : IObject;
END_VAR
VAR
	selfPointer : POINTER TO Object;
	comparingPointer : POINTER TO Object;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[selfPointer := THIS;

IF __QUERYPOINTER(object, comparingPointer) THEN
	Equals := selfPointer = comparingPointer;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{2d9f8d8d-3924-4b67-aafc-98d5a0623fe6}">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF ObjectStatisticsSettings.CountObjectStatistics THEN
	ObjectStatistics.RemoveObject(THIS^);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{f1b8d6f4-27df-492c-b43a-c682b4e0f7b2}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF ObjectStatisticsSettings.CountObjectStatistics THEN
	ObjectStatistics.AddObject(THIS^);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="IsDynamicInstance" Id="{24998a7a-78a1-4ed7-9b02-1f1a03f8b719}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY FINAL IsDynamicInstance : BOOL]]></Declaration>
      <Get Name="Get" Id="{13a65fb5-a1f5-4c18-8711-a901f8b8c50f}">
        <Declaration><![CDATA[
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IsDynamicInstance := MemoryHelper.IsDynamicData(THIS, 1);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Name" Id="{335dabc6-6513-4d8b-a225-099da5e07206}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Property' := '1'}
{attribute 'OPC.UA.DA.Access' := '1'}
PROPERTY Name : WSTRING
]]></Declaration>
      <Get Name="Get" Id="{d120e015-6224-47c6-9bd9-37bee31389df}">
        <Declaration><![CDATA[VAR
	address : PVOID;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[address := THIS;

Name := WideStringHelper.ConcatStrings255(TO_WSTRING(ClassName), "(", TO_WSTRING(Tc2_Utilities.DATA_TO_HEXSTR(ADR(address), SIZEOF(address), FALSE)), ")");]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Size" Id="{e1435e8d-7dee-46fb-af88-e0c12efed32f}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ABSTRACT Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{6e225585-3ad3-46c5-8df1-c249905d905a}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>