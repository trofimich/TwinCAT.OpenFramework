<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="ExceptionManager" Id="{a83d007f-42e6-48cd-9a14-7b9a497b4ddf}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'do not call this function block directly'} 
PROGRAM ExceptionManager
VAR
	_ClassName : STRING := __POUNAME();

	_Exception : IException;
	_EmptyException : EmptyException;
	_SystemException : SystemException;

	_DynamicExceptions : POINTER TO IException;	
	_DynamicExceptionCount : DWORD;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Service memebers" Id="{9351a9c9-de8b-47f9-8fdd-413111221208}" />
    <Method Name="Cleanup" Id="{9439ecc4-f37f-44e7-803e-1ee8d39cff59}">
      <Declaration><![CDATA[METHOD Cleanup
VAR
	i : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Exception := 0;

IF _DynamicExceptionCount > 0 THEN
	FOR i := 0 TO _DynamicExceptionCount - 1 DO
		_DynamicExceptions[i].Dispose();
	END_FOR
	
	__DELETE(_DynamicExceptions);
	
	_DynamicExceptionCount := 0;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetLastException" Id="{e2be0c6d-d285-4e57-9453-ace2efe79ed7}">
      <Declaration><![CDATA[// Result is always not null. Returns EmptyException instance by default
METHOD GetLastException : IException
VAR_IN_OUT CONSTANT 
	exceptionCode : __SYSTEM.ExceptionCode;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF exceptionCode = __SYSTEM.ExceptionCode.RTSEXCPT_DIVIDEBYZERO AND_THEN _Exception <> 0 THEN
	GetLastException := _Exception;
ELSE
	_SystemException.SetExceptionCode(exceptionCode);
	GetLastException := _SystemException;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="RegisterDynamicException" Id="{48a28801-5116-44bd-a9c6-25c220932013}" FolderPath="Service memebers\">
      <Declaration><![CDATA[METHOD INTERNAL RegisterDynamicException
VAR_INPUT
	exception : IException;
END_VAR
VAR
	newExceptionsToDelete : POINTER TO IException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF exception = 0 THEN
	RETURN;
END_IF

newExceptionsToDelete := __NEW(POINTER TO IException, (_DynamicExceptionCount + 1));

IF _DynamicExceptionCount > 0 THEN
	Tc2_System.MEMCPY(newExceptionsToDelete, _DynamicExceptions, TO_UDINT(XSIZEOF(POINTER TO Exception) * _DynamicExceptionCount));
	
	__DELETE(_DynamicExceptions);
END_IF

newExceptionsToDelete[_DynamicExceptionCount] := exception;

_DynamicExceptions := newExceptionsToDelete;
_DynamicExceptionCount := _DynamicExceptionCount + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReThrowLastException" Id="{7ea9eaf2-899d-4c20-8cad-4853167d967f}">
      <Declaration><![CDATA[METHOD ReThrowLastException
VAR
	fakeVariable : INT := 0;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Exception <> 0 THEN
	// fake devision by zero
	fakeVariable := fakeVariable / fakeVariable;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Throw" Id="{75adab3e-0cb1-497b-afc4-6a0aa273ac06}">
      <Declaration><![CDATA[METHOD Throw
VAR_INPUT CONSTANT
	exception : IException;
END_VAR
VAR
	fakeVariable : INT := 0;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF exception = 0 THEN
	RETURN;
END_IF

IF exception.IsDynamicInstance THEN
	_Exception := exception;
ELSE
	__QUERYINTERFACE(exception.Clone(), _Exception);
END_IF

// fake devision by zero
fakeVariable := fakeVariable / fakeVariable;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>