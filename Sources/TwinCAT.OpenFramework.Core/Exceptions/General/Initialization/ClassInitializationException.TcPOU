<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="ClassInitializationException" Id="{0a5c6ed3-0943-4e2b-b9c2-078f741efefe}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK ClassInitializationException EXTENDS GeneralException IMPLEMENTS IClassInitializationException
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{12636e5b-2221-4a85-bd91-7b499f0ac28b}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{2eb1e1f0-4f52-49a0-8c3e-b09ef3f14922}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clone" Id="{204906c1-215c-489a-a9df-dc250c7d1d43}">
      <Declaration><![CDATA[METHOD Clone : IObject
VAR
	exceptionClone : POINTER TO ClassInitializationException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[exceptionClone := __NEW(ClassInitializationException);

FillClone(exceptionClone);

Clone := exceptionClone^;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{0e31268a-a08e-4a21-aa02-2270e792bc63}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{2f737564-447f-4a03-a317-6f8f1b2dd47d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Throw" Id="{c2a15894-6732-49a8-81a0-8cf739ba1b51}">
      <Declaration><![CDATA[METHOD Throw
VAR_INPUT
	sourceNamespaceName : STRING;
	sourceClassName : STRING;
	sourceMethodName : STRING;
	sourcePosition : STRING;
	errorMessage : WSTRING(255);
	fatal : BOOL := FALSE;
END_VAR
VAR
	stringBuilder : WideStringBuilder;
	message : ERROR_MESSAGE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[stringBuilder
	.AppendString("Class '")
	.Append(sourceClassName)
	.AppendString("' was not correctly initialized: ")
	.AppendString(errorMessage);

AppendProgramOrganizationUnitFullName(stringBuilder, sourceNamespaceName, sourceClassName, sourceMethodName);

stringBuilder
	.AppendString("'")
	.AssignToString(message);

InternalThrow(sourceNamespaceName, sourceClassName, sourceMethodName, sourcePosition, message, 0, fatal, 0);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>