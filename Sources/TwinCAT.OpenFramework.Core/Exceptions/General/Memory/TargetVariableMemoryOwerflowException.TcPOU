<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="TargetVariableMemoryOwerflowException" Id="{a5c51537-9964-43b1-bc8c-6a2ce7304192}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK TargetVariableMemoryOwerflowException EXTENDS GeneralException IMPLEMENTS ITargetVariableMemoryOwerflowException
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{6face4de-0106-4653-8501-0739f37c18e9}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{30d770a2-ebf9-4246-aef6-3271c58673ee}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clone" Id="{9ed41139-91ec-41da-8fa6-2f309f22fbed}">
      <Declaration><![CDATA[METHOD Clone : IObject
VAR
	exceptionClone : POINTER TO TargetVariableMemoryOwerflowException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[exceptionClone := __NEW(TargetVariableMemoryOwerflowException);

FillClone(exceptionClone);

Clone := exceptionClone^;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{2752ec58-dcee-4d7a-8f6b-d4e2f3b6d8fd}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY FINAL Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{e13fa4a6-88b7-4506-b77e-187869e9727d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Throw" Id="{c8177a3a-3507-4fd9-82e5-01f82a5acc18}">
      <Declaration><![CDATA[METHOD Throw
VAR_INPUT
	sourceNamespaceName : STRING;
	sourceClassName : STRING;
	sourceMethodName : STRING;
	sourcePosition : STRING;
	targetVariableName : STRING;
	targetVariableSize : ULINT;
	fatal : BOOL := FALSE;
END_VAR
VAR
	stringBuilder : WideStringBuilder;
	message : ERROR_MESSAGE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[stringBuilder
	.AppendString("Terget variable '")
	.Append(targetVariableName)
	.AppendString("' (size ")
	.Append(targetVariableSize)
	.AppendString(") memory overflow '");

AppendProgramOrganizationUnitFullName(stringBuilder, sourceNamespaceName, sourceClassName, sourceMethodName);

stringBuilder
	.AppendString("'")
	.AssignToString(message);

InternalThrow(sourceNamespaceName, sourceClassName, sourceMethodName, sourcePosition, message, 0, fatal, 0);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>