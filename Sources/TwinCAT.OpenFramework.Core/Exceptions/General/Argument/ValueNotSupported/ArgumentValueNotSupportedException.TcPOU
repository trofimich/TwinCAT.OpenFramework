<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="ArgumentValueNotSupportedException" Id="{d8d21990-1e39-4f5f-aef8-b984d73d7d73}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK ArgumentValueNotSupportedException EXTENDS GeneralException IMPLEMENTS IArgumentValueNotSupportedException
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{76dbf709-fe3c-4ce6-9d63-0d897868c4b5}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{efbe33b9-10e8-456d-ae33-7cab85f1a521}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clone" Id="{20198072-dc81-4b94-9e1d-36ffa4fce358}">
      <Declaration><![CDATA[METHOD Clone : IObject
VAR
	exceptionClone : POINTER TO ArgumentValueNotSupportedException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[exceptionClone := __NEW(ArgumentValueNotSupportedException);

FillClone(exceptionClone);

Clone := exceptionClone^;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{3b8409ec-d858-4ce2-b488-d0871e63d4e2}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{c88d045c-ef25-4168-a3c5-ad6ea6909cbe}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Throw" Id="{1c82cdaa-6e6a-4d9a-bfc8-2c6b6a993818}">
      <Declaration><![CDATA[METHOD Throw
VAR_INPUT
	sourceNamespaceName : STRING;
	sourceClassName : STRING;
	sourceMethodName : STRING;
	sourcePosition : STRING;
	argumentName : STRING;
	argumentValue : ANY;
	fatal : BOOL := FALSE;
END_VAR
VAR
	valueAsString : WSTRING(255);
	stringBuilder : WideStringBuilder;
	message : ERROR_MESSAGE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[valueAsString := WideStringHelper.InternalAnyToString(argumentValue);

stringBuilder
	.AppendString("Argument '")
	.Append(argumentName)
	.AppendString("' has not supported value '")
	.AppendString(valueAsString)
	.AppendString("' in method or function '");

AppendProgramOrganizationUnitFullName(stringBuilder, sourceNamespaceName, sourceClassName, sourceMethodName);

stringBuilder
	.AppendString("'")
	.AssignToString(message);

InternalThrow(sourceNamespaceName, sourceClassName, sourceMethodName, sourcePosition, message, 0, fatal, 0);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>