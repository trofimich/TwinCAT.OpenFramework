<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="StringBuilder" Id="{8284c21b-c9e8-49a8-a6cf-7596c9e8432a}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

{attribute 'no_explicit_call' := 'Direct call is not allowed'} 
FUNCTION_BLOCK StringBuilder EXTENDS Object
VAR CONSTANT
	STRING_CHAR_SIZE : BYTE := 1;
END_VAR
VAR
	_ClassName : STRING := __POUNAME();

	_String : POINTER TO STRING;
	_Length : UDINT;
	_Capacity : UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Service members" Id="{34b67e1e-1d4d-4b5f-af2a-6efd13b4a7ef}" />
    <Method Name="Append" Id="{80786741-a12b-4915-89e9-e9f6a8437fc0}">
      <Declaration><![CDATA[METHOD Append : REFERENCE TO StringBuilder
VAR_INPUT
	value : ANY;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[InternalAppend(value);

Append REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AppendIf" Id="{ded300a7-9567-4b8d-8608-da0a3e173fbe}">
      <Declaration><![CDATA[METHOD AppendIf : REFERENCE TO StringBuilder
VAR_INPUT
	value : ANY;
	condition : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF condition THEN
	InternalAppend(value);
END_IF

AppendIf REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AppendString" Id="{c758facf-0415-4d15-b100-4f126030229f}">
      <Declaration><![CDATA[METHOD AppendString : REFERENCE TO StringBuilder
VAR_IN_OUT CONSTANT
	value : STRING;
END_VAR
VAR
	valueDescriptor : __SYSTEM.AnyType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[valueDescriptor.TypeClass := __SYSTEM.TYPE_CLASS.TYPE_STRING;
valueDescriptor.pValue := ADR(value);
valueDescriptor.diSize := TO_DINT(Tc2_Utilities.LEN2(ADR(value))) + 1;

InternalAppend(valueDescriptor);

AppendString REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AppendString255" Id="{2f5b2724-de01-4724-830a-faca48aa138c}">
      <Declaration><![CDATA[METHOD AppendString255 : REFERENCE TO StringBuilder
VAR_INPUT
	value : STRING(255);
END_VAR
VAR
	valueDescriptor : __SYSTEM.AnyType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[valueDescriptor.TypeClass := __SYSTEM.TYPE_CLASS.TYPE_STRING;
valueDescriptor.pValue := ADR(value);
valueDescriptor.diSize := TO_DINT(Tc2_Utilities.LEN2(ADR(value))) + 1;

InternalAppend(valueDescriptor);

AppendString255 REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AppendString255If" Id="{9e857820-5d79-4de0-92e4-96cde56b2a56}">
      <Declaration><![CDATA[METHOD AppendString255If : REFERENCE TO StringBuilder
VAR_INPUT
	value : STRING(255);
	condition : BOOL;
END_VAR
VAR
	valueDescriptor : __SYSTEM.AnyType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF condition THEN
	valueDescriptor.TypeClass := __SYSTEM.TYPE_CLASS.TYPE_STRING;
	valueDescriptor.pValue := ADR(value);
	valueDescriptor.diSize := TO_DINT(Tc2_Utilities.LEN2(ADR(value))) + 1;
	
	InternalAppend(valueDescriptor);
END_IF

AppendString255If REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AppendStringIf" Id="{58991056-7390-448e-8747-f0383b6b8ccb}">
      <Declaration><![CDATA[METHOD AppendStringIf : REFERENCE TO StringBuilder
VAR_IN_OUT CONSTANT
	value : STRING;
END_VAR
VAR_INPUT
	condition : BOOL;
END_VAR
VAR
	valueDescriptor : __SYSTEM.AnyType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF condition THEN
	valueDescriptor.TypeClass := __SYSTEM.TYPE_CLASS.TYPE_STRING;
	valueDescriptor.pValue := ADR(value);
	valueDescriptor.diSize := TO_DINT(Tc2_Utilities.LEN2(ADR(value))) + 1;
	
	InternalAppend(valueDescriptor);
END_IF

AppendStringIf REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="AssignToString" Id="{0a303461-f7d1-498f-8e6a-c7de66a64b56}">
      <Declaration><![CDATA[METHOD AssignToString : BOOL
VAR_INPUT
	targetString : ANY_STRING;
END_VAR
VAR
	//exceptionFactory : ExceptionFactory(__POUNAME(), ClassName, CurrentNamespace.Name);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF targetString.TypeClass <> __SYSTEM.TYPE_CLASS.TYPE_STRING THEN
	//exceptionFactory.ThrowException(__POSITION(), "Invalid string type, should be STRING");
END_IF

IF targetString.diSize < TO_DINT(_Length + STRING_CHAR_SIZE) THEN
	//exceptionFactory.ThrowException(__POSITION(), WStringHelper.Concat5("Target string size is ", TO_WSTRING(targetString.diSize), " bytes, but built string is ", TO_WSTRING(_Length + STRING_CHAR_SIZE), " bytes"));
END_IF

AssignToString := Tc2_Utilities.STRNCPY(targetString.pValue, _String, TO_UDINT(targetString.diSize));]]></ST>
      </Implementation>
    </Method>
    <Property Name="Capacity" Id="{1e6ef900-fba1-4ba8-8de8-3294582ea90f}">
      <Declaration><![CDATA[PROPERTY Capacity : UDINT]]></Declaration>
      <Get Name="Get" Id="{d019026a-a852-4a0c-a9af-414c165453fc}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Capacity := _Capacity;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ClassName" Id="{3feb1037-c4b3-4e06-a2a2-59afb847dd87}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING
]]></Declaration>
      <Get Name="Get" Id="{44e92c15-94f5-4051-b164-9c70cb1085dc}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clear" Id="{32f82a80-c61b-4a26-8ff1-0f270c0e09e3}">
      <Declaration><![CDATA[METHOD Clear : REFERENCE TO StringBuilder
VAR_INPUT
	releaseMemory : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Length := 0;

IF _Capacity > 0 THEN
	IF releaseMemory THEN
		__DELETE(_String);	
		_Capacity := 0;	
	ELSE
		Tc2_System.MEMSET(_String, 0, StringMaxSize);
	END_IF	
END_IF

Clear REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ClearIf" Id="{9fe3a161-5d4b-4b84-8106-aa11189315d1}">
      <Declaration><![CDATA[METHOD ClearIf : REFERENCE TO StringBuilder
VAR_INPUT
	condition : BOOL;
	releaseMemory : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF condition THEN
	Clear(releaseMemory);
END_IF

ClearIf REF= THIS^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{7a2eb7ec-2a10-41ef-b871-8cb033f0381b}">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Clear(TRUE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalAppend" Id="{668d8a31-60bb-4f6d-9327-f458f63b2a0f}" FolderPath="Service members\">
      <Declaration><![CDATA[METHOD PROTECTED InternalAppend 
VAR_INPUT
	value : REFERENCE TO __System.AnyType;
END_VAR
VAR
	stringToAppend : STRING(255);	
	stringToAppendLength : UDINT;
	newString : POINTER TO BYTE;
	newCapacity : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[stringToAppend := StringHelper.InternalAnyToString(value);

stringToAppendLength := TO_UDINT(Tc2_Standard.LEN(stringToAppend));

IF _Capacity = 0 OR_ELSE _Length + stringToAppendLength > _Capacity THEN
	IF _Length + stringToAppendLength - _Capacity > 80 THEN
		newCapacity := _Length + stringToAppendLength;
	ELSE
		newCapacity := _Length + 80;
	END_IF
	
	newString := __NEW(BYTE, (STRING_CHAR_SIZE + (newCapacity * STRING_CHAR_SIZE)));
	
	IF _String <> 0 THEN
		Tc2_Utilities.STRNCPY(newString, _String, STRING_CHAR_SIZE + (newCapacity * STRING_CHAR_SIZE));
		
		__DELETE(_String);
	END_IF
	
	_String := newString;
	_Capacity := newCapacity;
END_IF

Tc2_Utilities.CONCAT2(_String, ADR(stringToAppend), _String, StringMaxSize);
_Length := _Length + stringToAppendLength;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{115e42a6-ab9e-466a-968b-e275a0a6ead2}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{23fb216a-db3f-4d6a-93fd-497b787376af}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="StringAddress" Id="{91ca68a3-f5dc-4926-bdd2-2407e17bdfce}">
      <Declaration><![CDATA[PROPERTY StringAddress : POINTER TO STRING]]></Declaration>
      <Get Name="Get" Id="{b3c00823-5130-4974-bbdd-4fca9cf64d09}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[StringAddress := _String;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="StringLength" Id="{2841cc1a-ac38-4b44-b5b1-ede0be51183a}">
      <Declaration><![CDATA[PROPERTY StringLength : UDINT]]></Declaration>
      <Get Name="Get" Id="{fb48f645-418d-4ed8-a141-0905ce7ac859}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[StringLength := _Length;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="StringMaxSize" Id="{1e92dbea-3651-4443-86e0-4b59445a32da}">
      <Declaration><![CDATA[PROPERTY StringMaxSize : UDINT]]></Declaration>
      <Get Name="Get" Id="{af03c812-08ea-4abd-9698-f3945913d75b}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[StringMaxSize := STRING_CHAR_SIZE + (STRING_CHAR_SIZE * _Capacity);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="StringRealSize" Id="{6a5a268b-d11b-47fb-aea6-2780f29f073d}">
      <Declaration><![CDATA[PROPERTY StringRealSize : UDINT]]></Declaration>
      <Get Name="Get" Id="{14cd6132-ca22-4cec-a306-6360ec51bdfa}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[StringRealSize := STRING_CHAR_SIZE + (STRING_CHAR_SIZE * _Length);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ToString255" Id="{d9c363f7-c799-429e-a0a6-eb3be5eb113d}">
      <Declaration><![CDATA[METHOD ToString255 : STRING(255)]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Length > 0 THEN
	Tc2_Utilities.STRNCPY(ADR(ToString255), _String, SIZEOF(ToString255));
END_IF ]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>