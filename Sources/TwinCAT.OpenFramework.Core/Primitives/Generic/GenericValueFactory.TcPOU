<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="GenericValueFactory" Id="{5aafca66-5cdb-4882-83ad-05bcd6342c33}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

PROGRAM GenericValueFactory
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="FromTypedReferences" Id="{6a62176f-75b8-40f9-88f4-26d2c66b2b4c}">
      <Folder Name="Date and time" Id="{50be7849-3dc1-473b-9a05-6b6e31d6af8b}" />
      <Folder Name="Floating point" Id="{135cf303-d7c8-4cb2-83e4-8818dc564814}" />
      <Folder Name="Integer" Id="{9822276d-d405-467b-913a-d88d688e27ab}">
        <Folder Name="Signed" Id="{88769d57-d90b-4d86-a952-5ee7177698c2}" />
        <Folder Name="Unsugned" Id="{b4e483f8-ba35-4ef4-8231-cc40ee080b19}" />
      </Folder>
      <Folder Name="Strings" Id="{eee688c5-eebb-4825-a4d2-c0399523c8d1}" />
    </Folder>
    <Folder Name="FromTypedValues" Id="{25ae72e5-a435-4f95-b7ff-4fa29bd648e4}">
      <Folder Name="Date and time" Id="{c40440d3-8031-4729-9442-ab1c6e1a88ce}" />
      <Folder Name="Floating point" Id="{87a9bf3e-1364-4eb7-acac-0cdf6af21cc8}" />
      <Folder Name="Integer" Id="{0a1aa935-644b-4556-94c3-416eb3400fa0}">
        <Folder Name="Signed" Id="{940b3a7d-41f9-44cf-8d1e-ff10f12d8a45}" />
        <Folder Name="Unsugned" Id="{0879f3ef-e520-4036-bc27-14c1b4a89e4e}" />
      </Folder>
      <Folder Name="Strings" Id="{b9fa53fd-8c54-4f18-b477-b593285e3922}" />
    </Folder>
    <Property Name="ClassName" Id="{471a3424-a03f-46e9-aa5d-47ddfd6d5482}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{a20ec758-d80c-4890-b9c6-9d76856ede75}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := 'GENERIC_VALUE';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FromAny" Id="{6ea8f682-f65a-4f72-b981-df5fc5f1ef43}">
      <Declaration><![CDATA[METHOD FromAny : GENERIC_VALUE
VAR_INPUT
	value : ANY;
	isObject : BOOL;
	memoryManagementBehavior : GENERIC_MEMORY_MANAGEMENT_BEHAVIOR;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromAny := FromAnyType(value, isObject, memoryManagementBehavior);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromAnyType" Id="{58f5fed2-ee58-4bb7-b5fb-7380db0fc95f}">
      <Declaration><![CDATA[METHOD FromAnyType : GENERIC_VALUE
VAR_INPUT
	value : __System.AnyType;
	isObject : BOOL;
	memoryManagementBehavior : GENERIC_MEMORY_MANAGEMENT_BEHAVIOR;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromAnyType := FromParts(GenericTypeClassConvertor.GetGenericTypeClassBySystemAnyType(value, isObject), value.pValue, TO_ULINT(value.diSize), memoryManagementBehavior);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromBoolReference" Id="{d27b6912-bb8f-448c-b703-74f93763bb2a}" FolderPath="FromTypedReferences\">
      <Declaration><![CDATA[METHOD FromBoolReference : GENERIC_VALUE
VAR_IN_OUT
	value : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromBoolReference := FromParts(GENERIC_TYPE_CLASS.TYPE_BOOL, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromBoolValue" Id="{05323a56-8230-4256-ab0d-6fb067ae3a7c}" FolderPath="FromTypedValues\">
      <Declaration><![CDATA[METHOD FromBoolValue : GENERIC_VALUE
VAR_INPUT
	value : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromBoolValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromByteReference" Id="{d0163973-28dc-453e-ad54-13cb227a8692}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromByteReference : GENERIC_VALUE
VAR_IN_OUT
	value : BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromByteReference := FromParts(GENERIC_TYPE_CLASS.TYPE_BYTE, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromByteValue" Id="{c850b1be-a21b-48c4-b41a-36d350dde20f}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromByteValue : GENERIC_VALUE
VAR_INPUT
	value : BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromByteValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDateAndTimeReference" Id="{173ac213-1cc9-43cb-af55-055a2d088a5d}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromDateAndTimeReference : GENERIC_VALUE
VAR_IN_OUT
	value : DATE_AND_TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDateAndTimeReference := FromParts(GENERIC_TYPE_CLASS.TYPE_DATE_AND_TIME, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDateAndTimeValue" Id="{acb7264d-a9f1-46b1-a8df-1b273f60647d}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromDateAndTimeValue : GENERIC_VALUE
VAR_INPUT
	value : DATE_AND_TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDateAndTimeValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDateReference" Id="{e4aa20a7-899e-4891-8b7b-4b75565ece84}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromDateReference : GENERIC_VALUE
VAR_IN_OUT
	value : DATE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDateReference := FromParts(GENERIC_TYPE_CLASS.TYPE_DATE, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDateValue" Id="{23c94b95-80f9-479f-a2c5-e7d679fc27d6}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromDateValue : GENERIC_VALUE
VAR_INPUT
	value : DATE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDateValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDIntReference" Id="{347f607f-2c78-4202-8506-027cbef4c70e}" FolderPath="FromTypedReferences\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromDIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_DINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDIntValue" Id="{3180b989-96c3-434b-b481-bd0a4f94dfea}" FolderPath="FromTypedValues\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromDIntValue : GENERIC_VALUE
VAR_INPUT
	value : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDWordReference" Id="{946efa8e-2ab5-43b1-bf77-3303cffc04cb}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromDWordReference : GENERIC_VALUE
VAR_IN_OUT
	value : DWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDWordReference := FromParts(GENERIC_TYPE_CLASS.TYPE_DWORD, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromDWordValue" Id="{a4f9425d-c238-4587-bc3b-6ca752d58eb9}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromDWordValue : GENERIC_VALUE
VAR_INPUT
	value : DWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromDWordValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromIntReference" Id="{297f6b14-cf53-4dfc-8218-a8424a5edfe0}" FolderPath="FromTypedReferences\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_INT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromIntValue" Id="{8dbf331d-d65d-4447-810a-b5722dd5340b}" FolderPath="FromTypedValues\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromIntValue : GENERIC_VALUE
VAR_INPUT
	value : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLDateAndTimeReference" Id="{73c19958-a0a7-4e2d-ade2-e984449c3d1d}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromLDateAndTimeReference : GENERIC_VALUE
VAR_IN_OUT
	value : LDATE_AND_TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLDateAndTimeReference := FromParts(GENERIC_TYPE_CLASS.TYPE_ULINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLDateAndTimeValue" Id="{a766e905-b94b-4c9d-82d2-dc889e57d0b8}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromLDateAndTimeValue : GENERIC_VALUE
VAR_INPUT
	value : LDATE_AND_TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLDateAndTimeValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLDateReference" Id="{580e428d-fb4b-4375-874d-309e30a280bf}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromLDateReference : GENERIC_VALUE
VAR_IN_OUT
	value : LDATE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLDateReference := FromParts(GENERIC_TYPE_CLASS.TYPE_ULINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLDateValue" Id="{3521f0fd-d786-4c9e-9852-33d078c765f7}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromLDateValue : GENERIC_VALUE
VAR_INPUT
	value : LDATE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLDateValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLIntReference" Id="{3587c5a4-e047-430d-a163-142a19047459}" FolderPath="FromTypedReferences\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromLIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : LINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_LINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLIntValue" Id="{60a27329-0eea-455a-849b-eb1a0f8b3d54}" FolderPath="FromTypedValues\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromLIntValue : GENERIC_VALUE
VAR_INPUT
	value : LINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLRealReference" Id="{b3eac24c-b062-484b-ad9a-bc37b94b04ce}" FolderPath="FromTypedReferences\Floating point\">
      <Declaration><![CDATA[METHOD FromLRealReference : GENERIC_VALUE
VAR_IN_OUT
	value : LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLRealReference := FromParts(GENERIC_TYPE_CLASS.TYPE_LREAL, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLRealValue" Id="{3dd0d52e-c433-4065-9057-391e0b5d7161}" FolderPath="FromTypedValues\Floating point\">
      <Declaration><![CDATA[METHOD FromLRealValue : GENERIC_VALUE
VAR_INPUT
	value : LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLRealValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLTimeOfDayReference" Id="{ddcd78a1-0fee-4add-a56e-178a6a711394}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromLTimeOfDayReference : GENERIC_VALUE
VAR_IN_OUT
	value : LTIME_OF_DAY;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLTimeOfDayReference := FromParts(GENERIC_TYPE_CLASS.TYPE_ULINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLTimeOfDayValue" Id="{383c7178-c7ae-4a60-9f1e-7d0d454ddfe1}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromLTimeOfDayValue : GENERIC_VALUE
VAR_INPUT
	value : LTIME_OF_DAY;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLTimeOfDayValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLTimeReference" Id="{09bff33e-4edf-4b18-8976-6a561c6f9e70}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromLTimeReference : GENERIC_VALUE
VAR_IN_OUT
	value : LTIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLTimeReference := FromParts(GENERIC_TYPE_CLASS.TYPE_ULINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLTimeValue" Id="{720ca242-94c2-488a-8631-0658baa256f2}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromLTimeValue : GENERIC_VALUE
VAR_INPUT
	value : LTIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLTimeValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLWordReference" Id="{f772b6da-0878-4a66-aae9-b922e2dd49f9}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromLWordReference : GENERIC_VALUE
VAR_IN_OUT
	value : LWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLWordReference := FromParts(GENERIC_TYPE_CLASS.TYPE_LWORD, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromLWordValue" Id="{1b4080c1-48c3-4e24-89fd-b9ed03b1ebe8}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromLWordValue : GENERIC_VALUE
VAR_INPUT
	value : LWORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromLWordValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromObjectReference" Id="{1f38a672-fb8f-436c-9ddd-df1d9f011e0c}" FolderPath="FromTypedReferences\">
      <Declaration><![CDATA[METHOD FromObjectReference : GENERIC_VALUE
VAR_INPUT
	instance : IObject;
END_VAR
VAR
	instanceNullException : ArgumentNullException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF instance = 0 THEN
	instanceNullException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'instance');
END_IF

FromObjectReference := FromParts(GENERIC_TYPE_CLASS.TYPE_OBJECT, instance.Address, instance.Size, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromObjectValue" Id="{ad024805-1158-4b96-998d-e6f1c85f0eb0}" FolderPath="FromTypedValues\">
      <Declaration><![CDATA[METHOD FromObjectValue : GENERIC_VALUE 
VAR_INPUT
	instance : IObject;
END_VAR
VAR
	instanceNullException : ArgumentNullException;

	cloneableIntance : ICloneable;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF instance = 0 THEN
	instanceNullException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'instance');
END_IF

FromObjectValue := FromParts(GENERIC_TYPE_CLASS.TYPE_OBJECT, instance.Address, instance.Size, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromParts" Id="{759e0037-660d-404f-8404-ca0ffa255f71}">
      <Declaration><![CDATA[METHOD FromParts : GENERIC_VALUE
VAR_INPUT
	genericTypeClass : GENERIC_TYPE_CLASS;
	address : POINTER TO BYTE;
	size : ULINT;
	memoryManagementBehavior : GENERIC_MEMORY_MANAGEMENT_BEHAVIOR;
END_VAR
VAR
	newAddress : POINTER TO BYTE;

	objectPointer : POINTER TO Object;
	cloneable : ICloneable;
	clone : IObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF address = 0 OR_ELSE size <= 0 THEN
	RETURN;
END_IF

CASE memoryManagementBehavior OF
	GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY:
		IF genericTypeClass = GENERIC_TYPE_CLASS.TYPE_OBJECT THEN
			objectPointer := address;		
		END_IF
		
		IF genericTypeClass = GENERIC_TYPE_CLASS.TYPE_OBJECT AND_THEN __QUERYINTERFACE(objectPointer^, cloneable) THEN
			clone := cloneable.Clone();
			newAddress := clone.Address;	
		ELSE
			newAddress := __NEW(BYTE, TO_UDINT(size));	
			Tc2_System.MEMCPY(newAddress, address, TO_UDINT(size));
		END_IF

		FromParts.Assign(genericTypeClass, newAddress, size, TRUE);
	
	GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY:
		FromParts.Assign(genericTypeClass, address, size, FALSE);
	
	GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_OWNS_MEMORY:
		FromParts.Assign(genericTypeClass, address, size, TRUE);
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromRealReference" Id="{3b55838d-58fe-4935-bf92-dcc94945943e}" FolderPath="FromTypedReferences\Floating point\">
      <Declaration><![CDATA[METHOD FromRealReference : GENERIC_VALUE
VAR_IN_OUT
	value : REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromRealReference := FromParts(GENERIC_TYPE_CLASS.TYPE_REAL, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromRealValue" Id="{f5d5afa5-da33-48d8-929b-a1880a20b6ed}" FolderPath="FromTypedValues\Floating point\">
      <Declaration><![CDATA[METHOD FromRealValue : GENERIC_VALUE
VAR_INPUT
	value : REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromRealValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromSIntReference" Id="{dcbeabb7-7a7d-43d2-8ece-e53719a456af}" FolderPath="FromTypedReferences\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromSIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromSIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_SINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromSIntValue" Id="{69dc6169-e00d-4a1b-a310-c30817210f3f}" FolderPath="FromTypedValues\Integer\Signed\">
      <Declaration><![CDATA[METHOD FromSIntValue : GENERIC_VALUE
VAR_INPUT
	value : SINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromSIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromStringReference" Id="{ab2c82b3-b73e-4926-9fa1-21180356ffa0}" FolderPath="FromTypedReferences\Strings\">
      <Declaration><![CDATA[METHOD FromStringReference : GENERIC_VALUE
VAR_IN_OUT
	value : STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromStringReference := FromParts(GENERIC_TYPE_CLASS.TYPE_STRING, ADR(value), StringHelper.GetActualSize(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromStringValue" Id="{a2ca4991-d75a-4278-817b-66b69acc26fd}" FolderPath="FromTypedValues\Strings\">
      <Declaration><![CDATA[METHOD FromStringValue : GENERIC_VALUE
VAR_IN_OUT CONSTANT
	value : STRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromStringValue := FromParts(GENERIC_TYPE_CLASS.TYPE_STRING, ADR(value), StringHelper.GetActualSize(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromTimeOfDayReference" Id="{16667815-ae24-4a2e-bb7e-13b02852bf9b}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromTimeOfDayReference : GENERIC_VALUE
VAR_IN_OUT
	value : TIME_OF_DAY;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromTimeOfDayReference := FromParts(GENERIC_TYPE_CLASS.TYPE_TIME_OF_DAY, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromTimeOfDayValue" Id="{e882c6af-473d-4d99-a60c-86a44c55080d}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromTimeOfDayValue : GENERIC_VALUE
VAR_INPUT
	value : TIME_OF_DAY;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromTimeOfDayValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromTimeReference" Id="{4efbab6a-08c6-45a2-8741-5970c5b4615c}" FolderPath="FromTypedReferences\Date and time\">
      <Declaration><![CDATA[METHOD FromTimeReference : GENERIC_VALUE
VAR_IN_OUT
	value : TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromTimeReference := FromParts(GENERIC_TYPE_CLASS.TYPE_TIME, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromTimeValue" Id="{9ee9b713-8171-4acb-a940-5ccce35b7698}" FolderPath="FromTypedValues\Date and time\">
      <Declaration><![CDATA[METHOD FromTimeValue : GENERIC_VALUE
VAR_INPUT
	value : TIME;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromTimeValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromUDIntReference" Id="{1c502058-ad42-4bc4-99e4-7e76741e1405}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromUDIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromUDIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_UDINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromUDIntValue" Id="{168c3430-037e-43ee-96ec-29f9d4ddb82b}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromUDIntValue : GENERIC_VALUE
VAR_INPUT
	value : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromUDIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromUIntReference" Id="{81d69bd9-3d0f-4fa9-a701-f3d6b82d40a5}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromUIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromUIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_UINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromUIntValue" Id="{92156321-3e30-463a-83fa-c306bca1bc5c}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromUIntValue : GENERIC_VALUE
VAR_INPUT
	value : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromUIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromULIntReference" Id="{a686507f-51c4-410e-98ad-c2541ef602d2}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromULIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromULIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_ULINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromULIntValue" Id="{86c92bb6-733a-407c-aa95-3d976887e765}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromULIntValue : GENERIC_VALUE
VAR_INPUT
	value : ULINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromULIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromUSIntReference" Id="{946118fe-852d-4783-9124-b28f9c5aa505}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromUSIntReference : GENERIC_VALUE
VAR_IN_OUT
	value : USINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromUSIntReference := FromParts(GENERIC_TYPE_CLASS.TYPE_USINT, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromUSIntValue" Id="{aeae6bc1-69d5-4f8e-bf8c-5456e7fca1c3}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromUSIntValue : GENERIC_VALUE
VAR_INPUT
	value : USINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromUSIntValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromWordReference" Id="{3a044499-0651-4e47-8802-27ec81f73705}" FolderPath="FromTypedReferences\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromWordReference : GENERIC_VALUE
VAR_IN_OUT
	value : WORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromWordReference := FromParts(GENERIC_TYPE_CLASS.TYPE_WORD, ADR(value), XSIZEOF(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromWordValue" Id="{cf646851-d26b-43e6-9a97-f0629adff38e}" FolderPath="FromTypedValues\Integer\Unsugned\">
      <Declaration><![CDATA[METHOD FromWordValue : GENERIC_VALUE
VAR_INPUT
	value : WORD;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromWordValue := FromAny(value, FALSE, GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromWStringReference" Id="{ef6f17c2-c854-4bd1-98d9-b20dcef69d2f}" FolderPath="FromTypedReferences\Strings\">
      <Declaration><![CDATA[METHOD FromWStringReference : GENERIC_VALUE
VAR_IN_OUT
	value : WSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromWStringReference := FromParts(GENERIC_TYPE_CLASS.TYPE_WSTRING, ADR(value), WideStringHelper.GetActualSize(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.STORE_ORIGINAL_REFERENCE_AND_NOT_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Method Name="FromWStringValue" Id="{7495b560-9d45-42dd-b7ac-cea5caf03cd8}" FolderPath="FromTypedValues\Strings\">
      <Declaration><![CDATA[METHOD FromWStringValue : GENERIC_VALUE
VAR_IN_OUT CONSTANT
	value : WSTRING;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FromWStringValue := FromParts(GENERIC_TYPE_CLASS.TYPE_WSTRING, ADR(value), WideStringHelper.GetActualSize(value), GENERIC_MEMORY_MANAGEMENT_BEHAVIOR.CLONE_ORIGINAL_VALUE_AND_OWNS_MEMORY);]]></ST>
      </Implementation>
    </Method>
    <Property Name="NamespaceName" Id="{1b7a4363-1ae3-4082-9387-38baaafa2b6f}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY NamespaceName : STRING]]></Declaration>
      <Get Name="Get" Id="{d9491450-ccd1-4cff-a47e-d13d4898b8f0}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[NamespaceName := CurrentNamespace.Name;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>