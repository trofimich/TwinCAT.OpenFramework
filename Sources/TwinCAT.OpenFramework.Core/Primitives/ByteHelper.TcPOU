<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="ByteHelper" Id="{4c1e914f-00e1-45e5-bdca-b254c22e2f68}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

PROGRAM ByteHelper
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{fb3d16fe-5399-4b5a-80e6-19cedbecd583}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{cd1b3a06-6f44-402c-9d1f-651c537ab11f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="NamespaceName" Id="{ceff7d6b-22e0-47cf-8260-96e4949ef8cf}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY NamespaceName : STRING]]></Declaration>
      <Get Name="Get" Id="{6c84b319-a6a2-4675-99aa-938063978666}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[NamespaceName := CurrentNamespace.Name;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SearchByte" Id="{45aa6ec4-2b29-4487-b54e-c7bf4dea9dda}">
      <Declaration><![CDATA[METHOD SearchByte : DINT
VAR_INPUT
	startAddress : POINTER TO BYTE;
	startIndex : DINT;
	totalBytesCount : DINT;
	searchingByte : BYTE;
END_VAR
VAR
	startIndexOutOfRangeException : ArgumentOutOfRangeException;
	i : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF startIndex < 0 THEN
	startIndexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'startIndex', startIndex);
END_IF

SearchByte := -1;

FOR i := startIndex TO startIndex + totalBytesCount - 1 DO
	IF startAddress[i] = searchingByte THEN
		SearchByte := i;
		RETURN;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="Swap2Bytes" Id="{0620590b-fe0a-4b1d-a763-97490d56c192}">
      <Declaration><![CDATA[METHOD Swap2Bytes
VAR_INPUT
	data : POINTER TO ARRAY [0..1] OF BYTE;
END_VAR
VAR
	buffer : BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[buffer := data^[0];
data^[0] := data^[1];
data^[1] := buffer;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Swap4Bytes" Id="{fead7d5b-44c8-4b34-8fe1-d35b8727c4e7}">
      <Declaration><![CDATA[METHOD Swap4Bytes
VAR_INPUT
	data : POINTER TO ARRAY [0..3] OF BYTE;
END_VAR
VAR
	buffer : BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[buffer := data^[0];
data^[0] := data^[3];
data^[3] := buffer;

buffer := data^[1];
data^[1] := data^[2];
data^[2] := buffer;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Swap8Bytes" Id="{5ef2d4a6-e700-4380-ba32-f8ec2226beb0}">
      <Declaration><![CDATA[METHOD Swap8Bytes
VAR_INPUT
	data : POINTER TO ARRAY [0..7] OF BYTE;
END_VAR
VAR
	buffer : BYTE;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[buffer := data^[0];
data^[0] := data^[7];
data^[7] := buffer;

buffer := data^[1];
data^[1] := data^[6];
data^[6] := buffer;

buffer := data^[2];
data^[2] := data^[5];
data^[5] := buffer;

buffer := data^[3];
data^[3] := data^[4];
data^[4] := buffer;]]></ST>
      </Implementation>
    </Method>
    <Method Name="TrimBytesLeft" Id="{b9f4bf7a-b294-4bca-b963-32d8fa54725b}">
      <Declaration><![CDATA[METHOD TrimBytesLeft
VAR_INPUT
	startAddress : POINTER TO BYTE;
	trimBytesCount : DINT; 	
END_VAR
VAR_IN_OUT
	totalBytesCount : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF trimBytesCount > 0 AND trimBytesCount <= totalBytesCount THEN
	TC2_SYSTEM.MEMCPY(startAddress, startAddress + DINT_TO_UDINT(trimBytesCount), DINT_TO_UDINT(totalBytesCount - trimBytesCount));
	totalBytesCount	:= totalBytesCount - trimBytesCount;
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>