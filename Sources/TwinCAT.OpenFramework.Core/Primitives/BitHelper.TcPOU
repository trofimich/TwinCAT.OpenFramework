<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="BitHelper" Id="{ea1051e7-af64-48c6-9b9d-4d54221ed779}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

PROGRAM BitHelper
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{882eaad1-a2dd-49c9-890e-bf39d4412e82}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{91f3c59b-5a11-4be4-9371-e0ca99635198}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GetBitsFromByte" Id="{47f438c7-c09f-45c8-a2ed-dcc0a3f88818}">
      <Declaration><![CDATA[METHOD GetBitsFromByte : BYTE
VAR_INPUT
	value : BYTE;
	firstBitIndex : BYTE(0..7);
	lastBitIndex : BYTE(0..7);
END_VAR
VAR
	indexOutOfRangeException : ArgumentOutOfRangeException;
	standardException : StandardException;

	shrBits : BYTE;
	shlBits : BYTE;
END_VAR
VAR CONSTANT
	DATA_SIZE : BYTE := SIZEOF(BYTE);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF firstBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'firstBitIndex', firstBitIndex);
END_IF

IF lastBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'lastBitIndex', lastBitIndex);
END_IF

IF firstBitIndex > lastBitIndex THEN
	standardException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), WideStringHelper.ConcatStrings255("Argument firstBitIndex = ", TO_WSTRING(firstBitIndex), " is greater then lastBitIndex = ", TO_WSTRING(lastBitIndex)));	
END_IF

GetBitsFromByte := value;

shrBits := DATA_SIZE - LastBitIndex - 1;
shlBits := firstBitIndex + shrBits;

IF shrBits > 0 THEN
	GetBitsFromByte := SHR(GetBitsFromByte, shrBits);
END_IF

IF shlBits > 0 THEN
	GetBitsFromByte := SHL(GetBitsFromByte, shlBits);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetBitsFromDWord" Id="{c27d98c8-184f-41e1-91c5-b6e0313f2830}">
      <Declaration><![CDATA[METHOD GetBitsFromDWord : DWORD
VAR_INPUT
	value : DWORD;
	firstBitIndex : BYTE(0..31);
	lastBitIndex : BYTE(0..31);
END_VAR
VAR
	indexOutOfRangeException : ArgumentOutOfRangeException;
	standardException : StandardException;

	shrBits : BYTE;
	shlBits : BYTE;
END_VAR
VAR CONSTANT
	DATA_SIZE : BYTE := SIZEOF(DWORD);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF firstBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'firstBitIndex', firstBitIndex);
END_IF

IF lastBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'lastBitIndex', lastBitIndex);
END_IF

IF firstBitIndex > lastBitIndex THEN
	standardException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), WideStringHelper.ConcatStrings255("Argument firstBitIndex = ", TO_WSTRING(firstBitIndex), " is greater then lastBitIndex = ", TO_WSTRING(lastBitIndex)));	
END_IF

GetBitsFromDWord := value;

shrBits := DATA_SIZE - LastBitIndex - 1;
shlBits := firstBitIndex + shrBits;

IF shrBits > 0 THEN
	GetBitsFromDWord := SHR(GetBitsFromDWord, shrBits);
END_IF

IF shlBits > 0 THEN
	GetBitsFromDWord := SHL(GetBitsFromDWord, shlBits);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetBitsFromLWord" Id="{cc3cdf1d-009d-4c1a-84f9-a61d08189e52}">
      <Declaration><![CDATA[METHOD GetBitsFromLWord : LWORD
VAR_INPUT
	value : LWORD;
	firstBitIndex : BYTE(0..63);
	lastBitIndex : BYTE(0..63);
END_VAR
VAR
	indexOutOfRangeException : ArgumentOutOfRangeException;
	standardException : StandardException;

	shrBits : BYTE;
	shlBits : BYTE;
END_VAR
VAR CONSTANT
	DATA_SIZE : BYTE := SIZEOF(LWORD);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF firstBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'firstBitIndex', firstBitIndex);
END_IF

IF lastBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'lastBitIndex', lastBitIndex);
END_IF

IF firstBitIndex > lastBitIndex THEN
	standardException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), WideStringHelper.ConcatStrings255("Argument firstBitIndex = ", TO_WSTRING(firstBitIndex), " is greater then lastBitIndex = ", TO_WSTRING(lastBitIndex)));	
END_IF

GetBitsFromLWord := value;

shrBits := DATA_SIZE - LastBitIndex - 1;
shlBits := firstBitIndex + shrBits;

IF shrBits > 0 THEN
	GetBitsFromLWord := SHR(GetBitsFromLWord, shrBits);
END_IF

IF shlBits > 0 THEN
	GetBitsFromLWord := SHL(GetBitsFromLWord, shlBits);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetBitsFromWord" Id="{5250af8a-cbf7-4154-94e5-93b6741e61a2}">
      <Declaration><![CDATA[METHOD GetBitsFromWord : WORD
VAR_INPUT
	value : WORD;
	firstBitIndex : BYTE(0..15);
	lastBitIndex : BYTE(0..15);
END_VAR
VAR
	indexOutOfRangeException : ArgumentOutOfRangeException;
	standardException : StandardException;

	shrBits : BYTE;
	shlBits : BYTE;
END_VAR
VAR CONSTANT
	DATA_SIZE : BYTE := SIZEOF(WORD);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF firstBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'firstBitIndex', firstBitIndex);
END_IF

IF lastBitIndex >= DATA_SIZE THEN
	indexOutOfRangeException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'lastBitIndex', lastBitIndex);
END_IF

IF firstBitIndex > lastBitIndex THEN
	standardException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), WideStringHelper.ConcatStrings255("Argument firstBitIndex = ", TO_WSTRING(firstBitIndex), " is greater then lastBitIndex = ", TO_WSTRING(lastBitIndex)));	
END_IF

GetBitsFromWord := value;

shrBits := DATA_SIZE - LastBitIndex - 1;
shlBits := firstBitIndex + shrBits;

IF shrBits > 0 THEN
	GetBitsFromWord := SHR(GetBitsFromWord, shrBits);
END_IF

IF shlBits > 0 THEN
	GetBitsFromWord := SHL(GetBitsFromWord, shlBits);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="NamespaceName" Id="{cbb88c09-539f-4389-885b-2fa8602f4b80}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY NamespaceName : STRING]]></Declaration>
      <Get Name="Get" Id="{c4ae4d79-43b0-4cee-9a98-b4449b8bb601}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[NamespaceName := CurrentNamespace.Name;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>