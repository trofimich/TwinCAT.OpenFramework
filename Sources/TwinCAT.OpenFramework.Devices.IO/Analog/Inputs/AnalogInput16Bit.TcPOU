<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="AnalogInput16Bit" Id="{c1ea6f79-60a9-49f4-bd77-695b2ab88011}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK AnalogInput16Bit EXTENDS AnalogInput
VAR_INPUT
	SimulatedRawValue : WORD;
END_VAR
VAR
	_ClassName : STRING := __POUNAME();

	_Converter : IAnalogValue16BitConverter;

	_PhysicalRawValue AT %I* : WORD;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{e2a4d305-0531-4dc9-9542-3658a5b19872}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{af9caee4-ddd3-4939-a2d8-5bfd4ce7ebe4}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{993169c9-f3f4-4fab-acaf-b46d829c5468}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	(* if TRUE, the retain variables are initialized (warm start / cold start)*)
	bInitRetains	: BOOL;
	(* if TRUE, the instance afterwards gets moved into the copy code (online change)*)
	bInCopyCode	: BOOL;
	parent : ISimulatable;
	converter : IAnalogValue16BitConverter;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Converter := converter;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnInitialize" Id="{8717aaec-84bf-4a6d-9cd2-1392f347817c}">
      <Declaration><![CDATA[METHOD PROTECTED OnInitialize : BOOL
VAR
	converterNotInitializedException : ClassInitializationException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Converter = 0 THEN
	converterNotInitializedException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), "converter not specified");
END_IF

OnInitialize := SUPER^.OnInitialize();]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnUpdateStateFromInputs" Id="{f4e0240e-f3fb-4047-b237-81ba31c937cf}">
      <Declaration><![CDATA[METHOD PROTECTED OnUpdateStateFromInputs
VAR_IN_OUT CONSTANT
	executionContext : Automation.AUTOMATION_EXECUTION_CONTEXT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.OnUpdateStateFromInputs(executionContext);

_PreviousValue := _CurrentValue;

IF NOT SimulationMode THEN
	_CurrentValue := _converter.ConvertRawValueToAnalogValue(_PhysicalRawValue);
ELSE
	_CurrentValue := _converter.ConvertRawValueToAnalogValue(SimulatedRawValue);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{f41fe795-6269-415f-84e0-21e0f708ca3c}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{d50f06ea-53dd-48a0-94e9-7788d3c6014a}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>