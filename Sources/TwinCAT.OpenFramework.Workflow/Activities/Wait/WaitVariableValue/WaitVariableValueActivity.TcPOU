<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="WaitVariableValueActivity" Id="{42ec5adb-5b33-4f97-b06e-abb67d1deb50}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'do not call this function block directly'} 
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK WaitVariableValueActivity EXTENDS Activity IMPLEMENTS IWaitVariableValueActivity
VAR
	{attribute 'OPC.UA.DA' := '0'}
	_ClassName : STRING := __POUNAME();
	
	{attribute 'OPC.UA.DA' := '0'}
	_Condition : IVariableHasValueCondition;
	
	{attribute 'OPC.UA.DA' := '0'}
	_Configured : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Overriden" Id="{e869c370-97ea-4440-962a-299b7c76714e}" />
    <Property Name="ClassName" Id="{9255cdcc-cc75-4b54-a049-e35c44af441b}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{75ca8576-7cf6-486a-8444-bb56a0b67c7f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Configure" Id="{e9d27d0c-0ec6-4b8c-b0ee-313d596c221a}">
      <Declaration><![CDATA[METHOD Configure
VAR_INPUT
	monitoredVariableName : STRING;
	referenceValue : ANY; 
END_VAR
VAR
	variableNameEmptyException : Core.ArgumentOutOfRangeException;
	referenceValueNullException : Core.ArgumentNullException; 
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF monitoredVariableName = '' THEN
	variableNameEmptyException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'monitoredVariableName', monitoredVariableName);
END_IF

IF referenceValue.pValue = 0 OR_ELSE referenceValue.diSize = 0 THEN
	referenceValueNullException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), 'referenceValue');
END_IF

_Condition.Configure(monitoredVariableName, referenceValue);

_Configured := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{01e0eb72-4ffd-4697-80c0-edd56129e343}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	(* if TRUE, the retain variables are initialized (warm start / cold start)*)
	bInitRetains	: BOOL;
	(* if TRUE, the instance afterwards gets moved into the copy code (online change)*)
	bInCopyCode	: BOOL;
	workflow : IWorkflow;
END_VAR
VAR
	condition : POINTER TO VariableHasValueCondition;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[condition := __NEW(VariableHasValueCondition(workflow := workflow, activity := THIS^));

_Condition := condition^;]]></ST>
      </Implementation>
    </Method>
    <Property Name="MonitoredVariableName" Id="{9c3073b8-fb93-4527-9e2b-1b57a617b10a}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY MonitoredVariableName : STRING]]></Declaration>
      <Get Name="Get" Id="{53a3a5d7-b81b-4c1b-b3d8-075259b5275f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[MonitoredVariableName := _Condition.MonitoredVariableName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Name" Id="{4d113431-1828-49a5-adc6-543ca94a7ab4}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Name : WSTRING
]]></Declaration>
      <Get Name="Get" Id="{8d709444-a2cc-4b65-bd92-b4309202c126}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Name := SEL(_Name = "", _Name, TO_WSTRING(ClassName));]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{a3efb13e-325e-4300-a464-c1f28cdc1d7f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Name := Name;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="NamespaceName" Id="{30cd806d-4c9b-47c9-8e2b-dfdd05727a86}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY NamespaceName : STRING]]></Declaration>
      <Get Name="Get" Id="{be72f456-12d0-4faa-8bda-7636e17f566f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[NamespaceName := CurrentNamespace.Name;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="OnAborting" Id="{5b13f21b-b6c4-416d-8afb-2c568361ecfa}" FolderPath="Overriden\">
      <Declaration><![CDATA[METHOD PROTECTED OnAborting 
VAR_INPUT
	isStart : BOOL;
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[done := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnRunning" Id="{fb76f864-38cb-421c-8f70-82cee258b114}" FolderPath="Overriden\">
      <Declaration><![CDATA[METHOD PROTECTED OnRunning 
VAR_INPUT
	isStart : BOOL;
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR
VAR
	workflowVariable : Core.GENERIC_VALUE;

	notConfiguredException : Core.StandardException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _Configured THEN
	notConfiguredException.Throw(NamespaceName, ClassName, __POUNAME(), __POSITION(), "Activity is not configured");
END_IF

done := _Condition.Evaluate(THIS^);]]></ST>
      </Implementation>
    </Method>
    <Property Name="ReferenceValue" Id="{10cce365-b3cc-47cf-93c2-3f365e8252c3}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ReferenceValue : REFERENCE TO Core.GENERIC_VALUE]]></Declaration>
      <Get Name="Get" Id="{5491a43e-b72e-479a-af20-3f1aed552bf3}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ReferenceValue REF= _Condition.ReferenceValue;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Size" Id="{b5de74a5-a12f-46ac-a733-2c588aa0097f}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{080d625a-a924-4e07-839e-cbdd7c0560e8}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>