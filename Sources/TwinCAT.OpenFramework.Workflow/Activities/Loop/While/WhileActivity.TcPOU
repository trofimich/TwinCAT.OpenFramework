<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="WhileActivity" Id="{12c9e06e-5895-45ce-9974-6263c896f40b}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

{attribute 'no_explicit_call' := 'do not call this function block directly'} 
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK WhileActivity EXTENDS SequenceActivity IMPLEMENTS IWhileActivity
VAR
	{attribute 'OPC.UA.DA' := '0'}
	_Condition : ICondition;	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Overriden" Id="{8c1d4263-b645-4c82-9dcb-55337470aad6}" />
    <Property Name="ClassName" Id="{945e9c30-b95b-43ef-9233-6a843f2d82bf}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{3597e220-3046-4e42-8ec4-3ada54f3efb7}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Condition" Id="{9ffd553d-7db0-4b59-8a79-f5a38ea8bdc4}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY FINAL Condition : ICondition]]></Declaration>
      <Get Name="Get" Id="{22d12ecc-b75f-4acd-863e-d1c14b62fdde}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Condition := _Condition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{43185451-72c8-4e95-941a-bebcb25c083f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Condition := Condition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Configure" Id="{d5142548-dc1c-407c-a71e-5333193ceff2}">
      <Declaration><![CDATA[METHOD Configure
VAR_INPUT
	condition : ICondition; 
END_VAR
VAR
	argumentNullException : Core.ArgumentNullException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF condition = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'condition');
END_IF

_Condition := condition;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{6a543e26-62cd-441c-81f4-01e022c2491c}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	(* if TRUE, the retain variables are initialized (warm start / cold start)*)
	bInitRetains	: BOOL;
	(* if TRUE, the instance afterwards gets moved into the copy code (online change)*)
	bInCopyCode	: BOOL;
	workflow : IWorkflow;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_ClassName := 'WhileActivity';]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnRunning" Id="{346689b4-fcd7-4614-871f-ef4906187553}" FolderPath="Overriden\">
      <Declaration><![CDATA[METHOD PROTECTED OnRunning 
VAR_INPUT
	start : BOOL;
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR
VAR
	workflowVariable : Core.GENERIC_VALUE;
	
	argumentNullException : Core.NullReferenceException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Condition = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'Condition');
END_IF

IF start THEN
	IF NOT _Condition.Evaluate(THIS^) THEN
		done := TRUE;
		RETURN;
	END_IF
END_IF

SUPER^.OnRunning(start, done => done);

IF done THEN
	IF _Condition.Evaluate(THIS^) THEN
		SUPER^.OnRunning(TRUE, done => done);
	ELSE
		done := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{ef186776-ee7b-48a8-9b46-2633dc3274c4}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{cfd06962-6fec-4072-a8bc-e00513767b8d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>