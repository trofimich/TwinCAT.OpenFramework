<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="WhileActivity" Id="{12c9e06e-5895-45ce-9974-6263c896f40b}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK WhileActivity EXTENDS Activity IMPLEMENTS IWhileActivity
VAR
	{attribute 'OPC.UA.DA' := '0'}
	_ClassName : STRING := __POUNAME();

	{attribute 'OPC.UA.DA' := '0'}
	_Condition : ICondition;	
	{attribute 'OPC.UA.DA' := '0'}
	_DeleteConditionOnParentDelete : BOOL;

	{attribute 'OPC.UA.DA' := '0'}
	_Activity : IActivity;
	{attribute 'OPC.UA.DA' := '0'}
	_DeleteActivityOnParentDelete : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Overriden" Id="{8c1d4263-b645-4c82-9dcb-55337470aad6}" />
    <Property Name="Activity" Id="{67ecbf2d-c6eb-4446-894b-79dea8e79d79}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY FINAL Activity : IActivity]]></Declaration>
      <Get Name="Get" Id="{5d26f617-013c-4ecb-bbf5-2f163a194e3c}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Activity := _Activity;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{0621a6bf-de24-483d-983f-40bc5001ca70}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Activity := Activity;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="ClassName" Id="{945e9c30-b95b-43ef-9233-6a843f2d82bf}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{3597e220-3046-4e42-8ec4-3ada54f3efb7}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Condition" Id="{9ffd553d-7db0-4b59-8a79-f5a38ea8bdc4}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY FINAL Condition : ICondition]]></Declaration>
      <Get Name="Get" Id="{22d12ecc-b75f-4acd-863e-d1c14b62fdde}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Condition := _Condition;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{43185451-72c8-4e95-941a-bebcb25c083f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Condition := Condition;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Configure" Id="{d5142548-dc1c-407c-a71e-5333193ceff2}">
      <Declaration><![CDATA[METHOD Configure
VAR_INPUT
	condition : ICondition; 
	deleteConditionOnParentDelete : BOOL;
	activity : IActivity;
	deleteActivityOnParentDelete : BOOL;
END_VAR
VAR
	argumentNullException : Core.ArgumentNullException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF condition = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'condition');
END_IF

IF activity = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'activity');
END_IF

_Condition := condition;
_DeleteConditionOnParentDelete := deleteConditionOnParentDelete;

_Activity := activity;
_DeleteActivityOnParentDelete := deleteActivityOnParentDelete;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_exit" Id="{d468669e-2609-42a4-8cf6-e55c76a3017a}">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	(* if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).*)
	bInCopyCode	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Condition <> 0 AND_THEN _DeleteConditionOnParentDelete THEN
	_Condition.Dispose();
END_IF

IF _Activity <> 0 AND_THEN _DeleteActivityOnParentDelete THEN
	_Activity.Dispose();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnAborting" Id="{4570e04d-1285-4023-b17a-9e950403361e}" FolderPath="Overriden\">
      <Declaration><![CDATA[METHOD PROTECTED OnAborting 
VAR_INPUT
	start : BOOL;
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR
VAR
	argumentNullException : Core.NullReferenceException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Condition = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'Condition');
END_IF

IF _Activity = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'Activity');
END_IF

IF NOT _Activity.Busy THEN
	done := TRUE;
	RETURN;
END_IF

IF start THEN
	_Activity.StartAbort();
ELSE
	_Activity.Execute();
END_IF
	
done := NOT _Activity.Busy;]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnRunning" Id="{346689b4-fcd7-4614-871f-ef4906187553}" FolderPath="Overriden\">
      <Declaration><![CDATA[METHOD PROTECTED OnRunning 
VAR_INPUT
	start : BOOL;
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR
VAR
	workflowVariable : Core.GENERIC_VALUE;
	
	argumentNullException : Core.NullReferenceException;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Condition = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'Condition');
END_IF

IF _Activity = 0 THEN
	argumentNullException.Throw(CurrentNamespace.Name, ClassName, __POUNAME(), __POSITION(), 'Activity');
END_IF

IF start THEN
	IF NOT _Condition.Evaluate(Workflow, THIS^) THEN
		done := TRUE;
		RETURN;
	END_IF
END_IF

IF start THEN
	_Activity.Start();
ELSE
	_Activity.Execute();
END_IF
	
IF NOT _Activity.Busy THEN
	IF _Condition.Evaluate(Workflow, THIS^) THEN
		_Activity.Start();
	ELSE
		done := TRUE;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{ef186776-ee7b-48a8-9b46-2633dc3274c4}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY FINAL Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{cfd06962-6fec-4072-a8bc-e00513767b8d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>