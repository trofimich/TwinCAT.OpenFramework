<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="StandardComparers" Id="{87b8ffe1-0355-4a7f-8d1d-1285b07f1992}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

PROGRAM StandardComparers
VAR_OUTPUT
	BoolComparer : BoolComparer;
	ByteComparer : ByteComparer;
	WordComparer : WordComparer;
	DWordComparer : DWordComparer;
	LWordComparer : LWordComparer;
	SIntComparer : SIntComparer;
	USIntComparer : USIntComparer;
	IntComparer : IntComparer;
	UIntComparer : UIntComparer;
	DIntComparer : DIntComparer;
	UDIntComparer : UDIntComparer;
	LIntComparer : LIntComparer;
	ULIntComparer : ULIntComparer;
	RealComparer : RealComparer;
	LRealComparer : LRealComparer;		
	StringComparer : StringComparer;
	WStringComparer : WStringComparer;
	TimeComparer : TimeComparer;
	LTimeComparer : LTimeComparer;
	DateComparer : DateComparer;
	DateAndTimeComparer : DateAndTimeComparer;
	LDateAndTimeComparer : DateAndTimeComparer;
	TimeOfDayComparer : TimeOfDayComparer;	
	LTimeOfDayComparer : LTimeOfDayComparer;	
	ByteArrayComparer : ByteArrayComparer;
	PointerComparer : PointerComparer;	
END_VAR
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{a555cabc-7156-4add-909f-9abd99c5db6a}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{57b1b255-8046-4561-b3ec-5fa164bac495}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="GetForTypeClass" Id="{dc4a6532-4828-4b1a-a763-e1cc543032b4}">
      <Declaration><![CDATA[METHOD GetForTypeClass : IComparer
VAR_INPUT
	typeClass : GENERIC_TYPE_CLASS;
END_VAR
VAR
	argumentOutOfRangeException : ArgumentOutOfRangeException();
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE typeClass OF
    GENERIC_TYPE_CLASS.TYPE_BOOL:
		GetForTypeClass := BoolComparer;
    GENERIC_TYPE_CLASS.TYPE_BYTE:
		GetForTypeClass := ByteComparer;	
    GENERIC_TYPE_CLASS.TYPE_WORD:
		GetForTypeClass := WordComparer;
    GENERIC_TYPE_CLASS.TYPE_DWORD:
		GetForTypeClass := DWordComparer;
    GENERIC_TYPE_CLASS.TYPE_LWORD:
		GetForTypeClass := LWordComparer;
    GENERIC_TYPE_CLASS.TYPE_SINT:
		GetForTypeClass := SIntComparer;
    GENERIC_TYPE_CLASS.TYPE_INT:
		GetForTypeClass := IntComparer;
    GENERIC_TYPE_CLASS.TYPE_DINT:
		GetForTypeClass := DIntComparer;
    GENERIC_TYPE_CLASS.TYPE_LINT:
		GetForTypeClass := LIntComparer;
    GENERIC_TYPE_CLASS.TYPE_USINT:
		GetForTypeClass := USIntComparer;
    GENERIC_TYPE_CLASS.TYPE_UINT:
		GetForTypeClass := UIntComparer;
    GENERIC_TYPE_CLASS.TYPE_UDINT:
		GetForTypeClass := UDIntComparer;
    GENERIC_TYPE_CLASS.TYPE_ULINT:
		GetForTypeClass := ULIntComparer;
    GENERIC_TYPE_CLASS.TYPE_REAL:
		GetForTypeClass := RealComparer;
    GENERIC_TYPE_CLASS.TYPE_LREAL:
		GetForTypeClass := LRealComparer;
    GENERIC_TYPE_CLASS.TYPE_STRING:
		GetForTypeClass := StringComparer;
    GENERIC_TYPE_CLASS.TYPE_WSTRING:
		GetForTypeClass := WStringComparer;
    GENERIC_TYPE_CLASS.TYPE_TIME:
		GetForTypeClass := TimeComparer;
    GENERIC_TYPE_CLASS.TYPE_LTIME:
		GetForTypeClass := LTimeComparer;
    GENERIC_TYPE_CLASS.TYPE_DATE:
		GetForTypeClass := DateComparer;
    GENERIC_TYPE_CLASS.TYPE_DATE_AND_TIME:
		GetForTypeClass := DateAndTimeComparer;
    GENERIC_TYPE_CLASS.TYPE_TIME_OF_DAY:
		GetForTypeClass := TimeOfDayComparer;
    GENERIC_TYPE_CLASS.TYPE_POINTER:
		GetForTypeClass := PointerComparer;
    GENERIC_TYPE_CLASS.TYPE_ARRAY, GENERIC_TYPE_CLASS.TYPE_USER_DEFINED, GENERIC_TYPE_CLASS.TYPE_OBJECT:
		GetForTypeClass := ByteArrayComparer;
	ELSE
		argumentOutOfRangeException.Throw(CurrentNamespace.Name, 'StandardComparers', __POUNAME(), __POSITION(), 'pointerType', typeClass);
END_CASE]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>