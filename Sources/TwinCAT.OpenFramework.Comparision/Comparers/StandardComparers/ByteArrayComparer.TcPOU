<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="ByteArrayComparer" Id="{2bb53bb7-7d07-4a7a-896e-016e853fd868}" SpecialFunc="None">
    <Declaration><![CDATA[(*

.. <legal notes>

legal notes
=================
| SPDX-FileCopyrightText: © 2025 Oleksandr Tiutyk <trofimich@gmail.com>
| SPDX-License-Identifier: LGPL-3.0-only
| For details check: LGPL-3.0-only_

.. _LGPL-3.0-only: https://www.gnu.org/licenses/lgpl-3.0.en.html

.. </legal notes>

*)

FUNCTION_BLOCK ByteArrayComparer EXTENDS Core.Object IMPLEMENTS Core.IComparer
VAR
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{cf39d53b-ed13-4edf-ad55-696c13de665b}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{d30e6779-120e-49c2-abe1-17cbfac7965e}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Compare" Id="{ee7448b3-b623-4697-a6c8-19f6c43d07cb}">
      <Declaration><![CDATA[{attribute "object_name" := "Compare"}
METHOD Compare : COMPARISION_RESULT
VAR_INPUT
	first : __SYSTEM.AnyType;
	second : __SYSTEM.AnyType;
END_VAR
VAR
	leftPointer : POINTER TO BYTE; 
	rightPointer : POINTER TO BYTE; 
		
	i : LINT;
	minSize : LINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF first.pValue = 0 AND second.pValue = 0 THEN
	Compare := COMPARISION_RESULT.FIRST_EQUAL_TO_SECOND;
	RETURN;
END_IF

IF first.pValue = 0 THEN
	Compare := COMPARISION_RESULT.FIRST_LESS_THAN_SECOND;
	RETURN;	
END_IF

IF second.pValue = 0 THEN
	Compare := COMPARISION_RESULT.FIRST_GREATER_THAN_SECOND;
	RETURN;	
END_IF

minSize := TO_LINT(MIN(first.diSize, second.diSize));

FOR i := 0 TO minSize - 1 DO
	leftPointer := first.pValue + TO_LWORD(i);
	rightPointer := second.pValue + TO_LWORD(i);
	
	IF leftPointer^ < rightPointer^ THEN
		Compare := COMPARISION_RESULT.FIRST_LESS_THAN_SECOND;
		RETURN;
	ELSIF leftPointer^ > rightPointer^ THEN
		Compare := COMPARISION_RESULT.FIRST_GREATER_THAN_SECOND;
		RETURN;
	END_IF	
END_FOR

IF minSize > 0 
	AND_THEN leftPointer^ = 0
	AND_THEN rightPointer^ = 0
	AND_THEN (
		(first.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_STRING AND_THEN second.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_STRING) 
		OR_ELSE (first.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_WSTRING AND_THEN second.TypeClass = __SYSTEM.TYPE_CLASS.TYPE_WSTRING))
THEN
	Compare := COMPARISION_RESULT.FIRST_EQUAL_TO_SECOND;
	RETURN;
END_IF	
 
IF first.diSize < second.diSize THEN
	Compare := COMPARISION_RESULT.FIRST_LESS_THAN_SECOND;
ELSIF first.diSize > second.diSize THEN
	Compare := COMPARISION_RESULT.FIRST_GREATER_THAN_SECOND;
ELSE
	Compare := COMPARISION_RESULT.FIRST_EQUAL_TO_SECOND;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="NamespaceName" Id="{9a7e1f84-1d7c-4766-b019-8e9775b5d9ca}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY NamespaceName : STRING]]></Declaration>
      <Get Name="Get" Id="{f3eef584-0d20-4a97-ba32-a95b52b6625c}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[NamespaceName := CurrentNamespace.Name;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Size" Id="{b1a1240f-8b51-48b9-84a3-3c39c9b5cd85}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Size : ULINT]]></Declaration>
      <Get Name="Get" Id="{7cf65b52-2f9d-4aa5-9cb0-fb0f5d03a50d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := XSIZEOF(THIS^);]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>