<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="SignalControlledIntersectionAutomationRunner" Id="{1e869c90-ee5a-42b7-a253-37f2dba84151}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SignalControlledIntersectionAutomationRunner EXTENDS AutomationRunner<1>
VAR_OUTPUT
	SignalControlledIntersectionAutomationUnit : SignalControlledIntersectionAutomationUnit(THIS^);
END_VAR
VAR
	_ClassName : STRING := __POUNAME();
	
	_AutomationUnits : ARRAY [0..0] OF IAutomationUnit := [SignalControlledIntersectionAutomationUnit];
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="AutomationUnits" Id="{75f3d6c4-de20-44f3-a327-dad62fec48a5}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY AutomationUnits : REFERENCE TO ARRAY [0.._AutomationUnitCount - 1] OF AutomationEngine.IAutomationUnit]]></Declaration>
      <Get Name="Get" Id="{e36371e8-b7ed-4124-b278-72a073de3783}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[AutomationUnits REF= _AutomationUnits;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ClassName" Id="{6cc9f27c-25f1-4bfc-a0d5-199d5603618c}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{baa1c529-9ddb-45b6-90df-9b1e4a6a7afd}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_Init" Id="{1523ef35-042d-4971-b6ed-5e1caa4372f1}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)   
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TrySetSimulationMode(TRUE);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>